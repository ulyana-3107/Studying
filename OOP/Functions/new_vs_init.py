class Point:

    # этот магический метод вызывается перед созданием экземпляра класса, так как в практике программирования иногда ну
    # жно сделать что-то до создания объекта, например, реализация паттерна SINGLETON делается через этот метод. В данн
    # ом случае первый параметр (по умолчанию) - CLS - который ссылается на КЛАСС, в то время как SELF в
    # __init__ ссылается на ЭКЗЕМПЛЯР КЛАССА. Если метод __new__ ничего не возвращает, то экземпляр класса не может быть
    # создан с помощъю __init__, так как __new__ должен возвращать адрес новосозданного объекта.
    def __new__(cls, *args, **kwargs):
        print(f'new object will be created!')
        # все классы (не-дочерние) наследуются от базового класса object, т.е. при вызове функции super() в классе Point
        # мы получаем ссылку на базовый класс, и в этом базовом классе уже через ссылку вызываем метод __new__, он же и
        # запускает процесс создания экземпляра класса и возвращает адрес нового созданного объекта
        return super().__new__(cls)

    # этот магический метод вызывается сразу после создания нового экземпляра класса
    def __init__(self, x, y):
        print(f'new object was created right now.')
        self.x, self.y = x, y


# при создании нового объекта в метод __new__ они подставляются автоматически, поэтому он записывается в виде
# __new__(*args, **kwargs).
p = Point(2, 3)



