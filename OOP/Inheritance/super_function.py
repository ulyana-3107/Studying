# Как правило - дочерние классы создаются именно для расширения (extended) функциональности базового класса, но если в
# дочернем классе создается функция с тем же названием, что и в родительском - это перееопределение функции (overriding)
# Дочерний класс переопределяет базовый класс


class Geom:
    def __init__(self):
        print('Geom initialised.')


class Line(Geom):
    def __init__(self):
        print('Line initialised.')
    name = 'line'


# когда мы прописываем круглые скобки возле имени класса то вызывается магический метод __call__, который в свою очередь
# вызывает метод __new__ для создания экземпляра класса, затем метод __init__ для его инициализации - эти методы изнача
# льно ищутся в дочернем классе, затем по цепочке переходит к базовому классу
l = Line()